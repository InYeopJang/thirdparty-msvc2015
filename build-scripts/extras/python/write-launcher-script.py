""" Generate an easy_install-style launcher script

By default setuptools generates .exe files that are not relocatable and
are unsuitable for our installers.
"""
from __future__ import print_function
import argparse
import os
import sys

PY_EXECUTABLE = "%~dp0\..\python.exe"

SCRIPT_SRC = """#!{executable}
# EASY-INSTALL-ENTRY-SCRIPT: '{dist}', '{group}', '{name}'
__requires__ = '{dist}'
import sys
from pkg_resources import load_entry_point

if __name__ == '__main__':
    sys.exit(
        load_entry_point('{dist}', '{group}', '{name}')()
    )
"""

CMD_SRC= """REM This script was automatically generated by write-launcher-script.py
@echo off
setlocal enableextensions
REM python launcher script. Uses a relative path to the Python
REM executable to ensure it is relocatable
set _this_dir=%~dp0
{executable} %_this_dir%{startupscript} %*
"""

class EasyInstallLauncherScript(object):

    def __init__(self, build_dir, rm_exe):
        self.build_dir = build_dir
        self.rm_exe = rm_exe

    def run(self, dist, group, name):
        if not os.path.exists(self.build_dir):
            self.mkpath(self.build_dir)
        outfile = os.path.join(self.build_dir, name)
        print('Writing script to', outfile)
        with open(outfile, 'w') as f:
            f.write(SCRIPT_SRC.format(executable=PY_EXECUTABLE,
                                      dist=dist,group=group, name=name))
        # Write .cmd launcher
        cmdfile = outfile + ".cmd"
        print('Writing launcher to', cmdfile)
        with open(cmdfile, 'w') as f:
            f.write(CMD_SRC.format(executable=PY_EXECUTABLE,
                                   startupscript=name))

        if self.rm_exe:
            exefile = outfile + '.exe'
            try:
                os.remove(exefile)
            except OSError, exc:
                print("Error removing executable: '{}".format(str(exc)))

    def mkpath(self, path):
        os.mkdir(path)

if __name__ == '__main__':
    # Parse arguments
    parser = argparse.ArgumentParser()
    parser.add_argument("dist", help="The distribution string, e.g. pip==7.1.2. See pkg_resources help for more detail")
    parser.add_argument("group", help="The group string, e.g. console_scripts. See pkg_resources help for more detail")
    parser.add_argument("name", help="The name string. Used for the name of the file, e.g. pip. See pkg_resources help for more detail")
    parser.add_argument("--rm_exe", help="If a .exe of the same stem exists remove it", action="store_true")
    parser.add_argument("--destdir", help="The directory to install the scripts. Default=os.path.dirname(sys.executable)/Scripts")
    args = parser.parse_args()

    build_dir = args.destdir
    if build_dir is None:
        build_dir = os.path.join(os.path.dirname(sys.executable), 'Scripts')

    EasyInstallLauncherScript(build_dir, args.rm_exe).run(args.dist, args.group, args.name)